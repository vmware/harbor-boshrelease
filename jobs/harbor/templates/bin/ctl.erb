#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables
set -o pipefail

source /var/vcap/packages/common/utils.sh

JOB_NAME=harbor
HARBOR_RUN_DIR=$RUN_DIR/$JOB_NAME
HARBOR_LOG_DIR=$LOG_DIR/$JOB_NAME
HARBOR_JOB_DIR=$JOB_DIR/$JOB_NAME
PIDFILE=${HARBOR_RUN_DIR}/harbor.pid
TEMP_PIDFILE=${HARBOR_RUN_DIR}/harbor.tmp.pid
HARBOR_PACKAGE_DIR=${PACKAGE_DIR}/harbor-app
COMPOSE_PACKAGE_DIR=${PACKAGE_DIR}/docker-compose
HARBOR_YAML=${HARBOR_PACKAGE_DIR}/docker-compose.yml
HARBOR_CLAIR_YAML=${HARBOR_PACKAGE_DIR}/docker-compose.clair.yml
HARBOR_NOTARY_YAML=${HARBOR_PACKAGE_DIR}/docker-compose.notary.yml

CTL_CMD=/sbin/start-stop-daemon
COMPOSE_CMD=${COMPOSE_PACKAGE_DIR}/bin/docker-compose
DAEMON_SOCK=${RUN_DIR}/docker/dockerd.sock
DAEMON_PID=${RUN_DIR}/docker/dockerd.pid
CRON_PATH=/etc/cron.d/$JOB_NAME
CRON_JOB_INTERVAL=2
CHECK_SCRIPT_PATH=${HARBOR_JOB_DIR}/bin/status_check

HARBOR_DATA=/data
HARBOR_DB_BACKUP_DIR=$HARBOR_DATA/db_backup
COMMAND_NAME=$1

#Make sure folders are ready
for dir in $HARBOR_RUN_DIR $HARBOR_LOG_DIR ; do
  mkdir -p ${dir}
  chown vcap:vcap ${dir}
  chmod 755 ${dir}
done

#Workaround to resolve the docker-compose libz issue
sudo mount /tmp -o remount,exec

exec 1>> $HARBOR_LOG_DIR/ctl.stdout.log
exec 2>> $HARBOR_LOG_DIR/ctl.stderr.log

source $PACKAGE_DIR/harbor-common/common.sh
source $HARBOR_JOB_DIR/bin/properties.sh

#Start the harbor process
#Require options parameter for $COMPOSE_CMD
startHarbor() {
  $CTL_CMD --pidfile $TEMP_PIDFILE \
  --make-pidfile \
  --background \
  --exec $COMPOSE_CMD \
  --start --oknodo \
  -- $1 \
  1>> $HARBOR_LOG_DIR/ctl.stdout.log \
  2>> $HARBOR_LOG_DIR/ctl.stderr.log
}

#Stop the harbor process
#Require options parameter for $COMPOSE_CMD
stopHarbor() {
  if $COMPOSE_CMD $1 2>&1 || \
     ([[ -s $PIDFILE ]] && $CTL_CMD --pidfile $PIDFILE --retry TERM/30/QUIT/5/KILL --oknodo --stop); then
     [[ -e $PIDFILE ]] && rm -f $PIDFILE
  fi
}

waitForHarbor() {
  sleep_time=5
  timeout=180
  count=0
  log "Waiting for Harbor Service to be ready ..."
  while ! $CHECK_SCRIPT_PATH >> $HARBOR_LOG_DIR/cron.log 2>&1
  do
    log "Harbor service is not ready. Waiting for $sleep_time seconds then check again."
    sleep $sleep_time
    count=$((count + sleep_time));
    if [ $count -ge $timeout ]; then
      log "Error: Harbor Service failed to start in $timeout seconds."
      exit 1
    fi
  done
  log "Harbor Service is ready"
}

#Check docker daemon status
checkDockerdStatus() {
  [[ -e $DAEMON_SOCK ]] && \
  [[ -e $DAEMON_PID ]] && \
  pgrep -f dockerd >/dev/null 2>&1
}

#Upgrade Harbor if higher version of Harbor Bosh Release to be deployed
upgradeHarbor() {
  log "Backing up Harbor database"
  $DOCKER_CMD run -i --rm -e DB_USR=root -e DB_PWD=$HARBOR_DB_PWD -v /data/database:/var/lib/mysql -v $HARBOR_DB_BACKUP_DIR:/harbor-migration/backup vmware/harbor-db-migrator:$HARBOR_VERSION backup
  log "Migrating Harbor database"
  $DOCKER_CMD run -i --rm -e SKIP_CONFIRM=y -e DB_USR=root -e DB_PWD=$HARBOR_DB_PWD -v /data/database:/var/lib/mysql vmware/harbor-db-migrator:$HARBOR_VERSION upgrade head
}

#Add cron job to check Harbor service availability.
#If harbor service is not running well, remove the harbor pid file, then monit will restart it.
cronJobUp() {
  echo "*/$CRON_JOB_INTERVAL * * * * root $CHECK_SCRIPT_PATH -r >> $HARBOR_LOG_DIR/cron.log 2>&1" > $CRON_PATH
}

#Stop the cron job
cronJobDown() {
  rm -f $CRON_PATH
}

#Build compose options
COMPOSE_OPTS="-H $DOCKER_HOST -f ${HARBOR_YAML}"
if [ -n "$WITH_NOTARY" ]; then
  COMPOSE_OPTS="${COMPOSE_OPTS} -f ${HARBOR_NOTARY_YAML}"
fi

if [ -n "$WITH_CLAIR" ]; then
  COMPOSE_OPTS="${COMPOSE_OPTS} -f ${HARBOR_CLAIR_YAML}"
fi

case $COMMAND_NAME in

  start)
    log "Starting Harbor $HARBOR_FULL_VERSION at ${HARBOR_PROTOCOL}://${HARBOR_HOSTNAME}"

    waitForDockerd

    if $ENABLE_MIGRATION; then
      #The 1st Harbor Bosh Release for PKS does not need to upgrade from old version.
      log "Upgrading Harbor if not upgraded yet ..."
      upgradeHarbor
    fi

    log "Launching 'docker-compose up' ..."
    COMPOSE_OPTS="${COMPOSE_OPTS} up"
    startHarbor "$COMPOSE_OPTS"

    #Wait for Harbor Service
    waitForHarbor
    #Now let monit detect the real harbor pid
    mv $TEMP_PIDFILE $PIDFILE

    log "Add cron job for Harbor status check"
    cronJobUp
    ;;

  stop)
    log "Stopping Harbor ..."
    log "Remove cron job for Harbor status check"
    cronJobDown

    #TODO: Add instance clean work here if migration is enabled

    log "Launching 'docker-compose down' ..."
    COMPOSE_OPTS="${COMPOSE_OPTS} down"
    stopHarbor "$COMPOSE_OPTS"
    ;;

  *)
    log -n "Usage: ctl {start|stop}"
    ;;

esac

log "ctl $COMMAND_NAME is successfully done!"
exit 0
