#!/usr/bin/env bash

set -e # exit immediately if a simple command exits with a non-zero status

[ -z "${DEBUG:-}" ] || set -x

source /var/vcap/packages/common/utils.sh

PACKAGE_DIR=/var/vcap/packages
JOB_NAME=harbor
HARBOR_JOB_DIR=/var/vcap/jobs/$JOB_NAME
HARBOR_PACKAGE_DIR=${PACKAGE_DIR}/harbor-app
HARBOR_PERSISTED_DATA=/var/vcap/store/$JOB_NAME
HARBOR_IMAGES_TAR_PATH=${HARBOR_PACKAGE_DIR}/harbor*.tar
HARBOR_DATA=/data
CFG_FILE=${HARBOR_JOB_DIR}/config/harbor.cfg
CRON_PATH=/etc/cron.d/$JOB_NAME
CERTS_D=/etc/docker/certs.d

source $PACKAGE_DIR/harbor-common/common.sh
source $HARBOR_JOB_DIR/bin/properties.sh

log "Installing Harbor $HARBOR_FULL_VERSION"

#Make sure folders are ready
for dir in $HARBOR_PERSISTED_DATA ; do
  mkdir -p ${dir}
  chown vcap:vcap ${dir}
  chmod 755 ${dir}
done

#Link Harbor Data dir to Bosh Persistent Disk
#See https://bosh.io/docs/persistent-disks.html
ln -sfT $HARBOR_PERSISTED_DATA $HARBOR_DATA

<%- if p("populate_etc_hosts") do %>
#Populate /etc/hosts
fqdn=<%= p("hostname") %>
ip=<%= spec.ip %>
sed -i -e "/$ip/d" /etc/hosts
<%-   if spec.ip != p("hostname") %>
sed -i -e "/$fqdn/d" /etc/hosts
echo "$ip $fqdn" >> /etc/hosts
<%-   end %>
<%- end %>

if [ "$HARBOR_PROTOCOL" = "https" ]; then
  #Copy cert to the right place
  mkdir -p $HARBOR_DATA/cert
  mkdir -p $HARBOR_DATA/ca_download

  cp ${HARBOR_JOB_DIR}/config/server.crt $HARBOR_DATA/cert/
  cp ${HARBOR_JOB_DIR}/config/server.key $HARBOR_DATA/cert/
  cp ${HARBOR_JOB_DIR}/config/uaa_ca.crt $HARBOR_DATA/cert/
  cp ${HARBOR_JOB_DIR}/config/ca.crt $HARBOR_DATA/ca_download

  #For status checking script usage
  CERT_PATH=$CERTS_D/${HARBOR_HOSTNAME}
  mkdir -p $CERT_PATH
  chown vcap:vcap ${CERT_PATH}
  chmod 755 ${CERT_PATH}
  cp $HARBOR_DATA/ca_download/ca.crt ${CERT_PATH}
fi

#Prepare Harbor env
PREPARE_OPTS="--conf ${CFG_FILE}"

#If install optional component Notary
if [ -n "$WITH_NOTARY" ]; then
  PREPARE_OPTS="${PREPARE_OPTS} --with-notary"
fi

#If install optional component Clair
if [ -n "$WITH_CLAIR" ]; then
  PREPARE_OPTS="${PREPARE_OPTS} --with-clair"
fi

${HARBOR_PACKAGE_DIR}/prepare ${PREPARE_OPTS}

#Load Harbor images
loadImages() {
  #Start dockerd
  /var/vcap/jobs/docker/bin/ctl start
  waitForDockerd
  #TODO(szou): Add image cleaning here if do migration
  #Load images
  log "Loading docker images ..."
  $DOCKER_CMD load -i $HARBOR_IMAGES_TAR_PATH 2>&1
  /var/vcap/jobs/docker/bin/ctl stop
  # wait for 3 seconds to avoid possible race condition
  sleep 3
}

loadImages

#If auth mode is 'uaa_auth' and admin client existing, try to register UAA client for Harbor registry
if [ $AUTH_MODE = 'uaa_auth' ] && [[ ! -z "${UAA_ADMIN// }" ]]; then
  source $HARBOR_JOB_DIR/bin/uaa.sh
  register_harbor_uaa_client
fi

log "Successfully done!"
exit 0
